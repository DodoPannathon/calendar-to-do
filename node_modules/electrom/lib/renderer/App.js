"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_dom_1 = __importDefault(require("react-dom"));
const classnames_1 = __importDefault(require("classnames"));
const renderer_1 = require("../../src/renderer");
const util_1 = require("./util");
require("antd/dist/antd.css");
const App_module_less_1 = __importDefault(require("./App.module.less"));
const App = () => {
    const [display, setDisplay] = (0, react_1.useState)(true);
    const { ipcRenderer, shell } = getBridge();
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(renderer_1.StatusBoard, { eventDataChannelName: renderer_1.EVENT_DATA_CHANNEL_NAME, eventActionChannelName: renderer_1.EVENT_ACTION_CHANNEL_NAME, ipcRenderer: ipcRenderer, shell: shell }), (0, jsx_runtime_1.jsxs)("div", { className: (0, classnames_1.default)(App_module_less_1.default.pin, {
                    [App_module_less_1.default.hide]: !display,
                }), children: [(0, jsx_runtime_1.jsx)(renderer_1.PerfBoard, {}), display ? ((0, jsx_runtime_1.jsx)("div", { className: App_module_less_1.default.close, onClick: () => setDisplay(false), children: "x" })) : ((0, jsx_runtime_1.jsx)("div", { className: App_module_less_1.default.badge, onClick: () => setDisplay(true), children: "\uD83D\uDCC8" }))] })] }));
};
const container = document.querySelector('#app');
// @ts-ignore
function getBridge() {
    const params = new URLSearchParams(location.search);
    // @ts-ignore
    return window[params.get('IPC_BRIDGE_NAME') || renderer_1.IPC_BRIDGE_NAME];
}
async function whenBridgeReady() {
    return await (0, util_1.waitUntil)(() => !!getBridge(), {
        ms: 1000,
        retryTime: 100,
    });
}
whenBridgeReady()
    .then(() => {
    react_dom_1.default.render((0, jsx_runtime_1.jsx)(App, {}), container);
})
    .catch(e => {
    document.write(JSON.stringify(e, null, 2));
});
//# sourceMappingURL=App.js.map